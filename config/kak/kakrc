########################################################
# Editor Configs
########################################################
add-highlighter global/ wrap
add-highlighter global/ show-matching
add-highlighter global/ number-lines -relative -separator |

set-option global jumpclient jump
set-option global toolsclient tools
set-option global docsclient docs
set-option global startup_info_version 99999999

set global tabstop 4
set global ui_options ncurses_assistant=off
set -add global ui_options ncurses_set_title=false


#####################################################
# Commands
#####################################################
define-command -hidden -params 2 exec-in-terminal %{ terminal sh -c "printf ""evaluate-commands -client %val{client} %arg{1} %%s\n"" ""$(%arg{2})"" | kak -p %val{session}" }
define-command -params .. test-exec-in-terminal %{ terminal sh -c "printf ""evaluate-commands -client %val{client} %arg{1} %%s\n"" $(%arg{2}) | cat" }


declare-option str fzf_command	'fzf --cycle --ansi --preview "bat --number --color=always {1}"'
define-command -params 3 fzf %{ exec-in-terminal "%arg{1}" "%arg{2} | %opt{fzf_command} | %arg{3}" }

declare-option str find_command 'fd --hidden --ignore-case --follow --color always'
define-command -params 2.. -file-completion -override find %{ fzf "edit" "%opt{find_command} %arg{@}" "cat" }

declare-option str grep_command 'rg --follow --hidden --smart-case --vimgrep --trim --color=always'
define-command -params 1.. -override grep %{ fzf "edit" "%opt{grep_command} %arg{@} | cut --delimiter "":"" --output-delimiter="" "" --fields=-3" "cat" }

####################################################
# Key bindings
####################################################
map -docstring 'next buffer' global goto n ':buffer-next'
map -docstring 'previous buffer' global goto p ':buffer-previous'

